<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator>
  <link href="/tag/code/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2019-11-18T07:18:53+00:00</updated>
  <id>/tag/code/feed.xml</id>

  
  
  

  
    <title type="html">Andrew Miracle | </title>
  

  
    <subtitle>Andrew is a Product Designer and Entrepreneur. My expertise is compassed from my years of experience in software development, Analytics and Technical Team Management.</subtitle>
  

  

  
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Nature, the Mother of Tech</title>
      <link href="/posts/nature-mother-of-tech" rel="alternate" type="text/html" title="Nature, the Mother of Tech" />
      <published>2019-11-03T00:00:00+00:00</published>
      <updated>2019-11-03T00:00:00+00:00</updated>
      <id>/posts/nature-mother-of-tech</id>
      <content type="html" xml:base="/posts/nature-mother-of-tech">&lt;h1 id=&quot;draft-mode&quot;&gt;DRAFT MODE&lt;/h1&gt;

&lt;p&gt;I never really figured out the angle for this article, so I’ll just dump stuff here until it makes sense from a user point of view.&lt;/p&gt;

&lt;p&gt;Birds could fly before the wright brothers created the plane, possible to argue is the statement that they didn’t create the plane, according to their &lt;a href=&quot;https://en.wikipedia.org/wiki/Wright_brothers_patent_war&quot;&gt;patent&lt;/a&gt;, which stirred controversy for over a decade and even after their death. &lt;em&gt;The Wright brothers claimed to have created an aeronautical flying control system&lt;/em&gt; which proves that we were only trying to understand what nature had already designed, flight, which eagles and birds of all kinds have been utilizing, although the Wright brothers weren’t the only ones working on the invention of &lt;strong&gt;flight&lt;/strong&gt; systems during their time, why theirs succeded was because other inventors were more focused on creating highly efficient flight engines, without considering the conditions of the pilots who would control the plane, thus the Wright brothers were able to breakthrough because they designed from the Pilot’s perspective, doing so would enable them conduct further user experiments to improve flight control and efficiency, citing a case where nature is one step ahead of us.&lt;/p&gt;

&lt;p&gt;Nature and biology has already perfected theories which we today seek for in science and technology.&lt;/p&gt;

&lt;p&gt;Consider machine learning and Neural networks, and How Trees already have a deep link of communication. Did you know that when cut the grass in your fields or pluck a freshly grown rose flower, the scent you perceive with your nose, as perfume from the flowers, or greens from the grass is actually a distress call to nature made my the flowers for ..&lt;/p&gt;

&lt;p&gt;Machine Learning and Deep learning leverages the concept of neural networks and &lt;em&gt;decision trees&lt;/em&gt; in order to build highly complicated recommendation and learning systems.&lt;/p&gt;

&lt;p&gt;Trees today has VOCS and &lt;a href=&quot;http://nautil.us/issue/77/underworldsnbsp/never-underestimate-the-intelligence-of-trees&quot;&gt;mycorrhizae&lt;/a&gt; which allow them to shutdown or call for help, If you love foraging grasses and picnics you will realize that when you seat on the grass for so long, its only a matter of time before unfriendly insects begin to disturb your peace, because their neighbouring grasses have called for their help to push you human away from sitting down on them and suffocating them of air. piece of advise change your location.&lt;/p&gt;

&lt;p&gt;Nature loves when tech is working in its favour, that’s why we find Cannabis and Agritech startups receiving the best in support they need. &lt;a href=&quot;https://news.crunchbase.com/news/twiga-foods-lands-over-30m-nairobis-largest-known-financing-round-of-the-year/&quot;&gt;Twiga Food lands over $30Million&lt;/a&gt; in Financing&lt;/p&gt;

&lt;p&gt;Neural networks existed within the deep roots of trees that allow them to share nutrients and communicate.&lt;/p&gt;

&lt;p&gt;Trees have their neural networks : The applications of deep learning are growing so vast that it has made a great headway into areas requiring heavy computing. And, the elements that make up DL models — artificial neural networks (ANN) — can be said to be the driving force behind the subject.&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;https://arxiv.org/pdf/1711.09784.pdf&quot;&gt;paper&lt;/a&gt; Distilling a Neural Network Into a Soft Decision Tree, Hinton and Prosst tell why decision trees are preferred to elucidate neural nets. “Unlike the hidden units in a neural net, a typical node at the lower levels of a decision tree is only used by a very small fraction of the training data so the lower parts of the decision tree tend to overfit unless the size of the training set is exponentially large compared with the depth of the tree.”&lt;/p&gt;

&lt;p&gt;Hinton and Frosst use the neural network itself to train on a decision tree. If large amounts of data are encountered, poor statistical efficiency observed in decision trees is nullified by neural nets. An important point here, ‘soft decision trees’ are considered to train the neural net. Soft decision trees mean children nodes (also known as the leaf or terminal node if it ends here) in a decision tree are assigned a certain probability. Also, all leaves contribute equally to the final decision in the tree.&lt;/p&gt;

&lt;p&gt;Chameleons can change their color according to their environment in order to blend in&lt;/p&gt;

&lt;p&gt;Bug and error reporting, Garbage collection&lt;/p&gt;

&lt;p&gt;Blockchain today is trying to relive the same concepts of publicly immutable ledger where all transactions are recorded and known among all parties, today we relive that concepts already in childbirth, whereas we have smart contracts where two conditions meet for a transaction to be recorded on the ledger, in childbirth we have two more so dumb contract where consent is given by two parties and there is a constantly estimated time to arrival &lt;strong&gt;~9months&lt;/strong&gt; with which a transaction can be recorded as complete.&lt;/p&gt;

&lt;h3 id=&quot;blockchain-and-childbirth&quot;&gt;Blockchain and Childbirth&lt;/h3&gt;

&lt;p&gt;Blockchain can be used to prove ownership when procuring or disposing of an asset. It can also help to track the history of an assets and related maintenance activities.&lt;/p&gt;

&lt;p&gt;A Blockchain is a type of diary or spreadsheet containing information about transactions. Each transaction generates a hash. … If a transaction is approved by a majority of the nodes then it is written into a block. Each block refers to the previous block and together make the Blockchain&lt;/p&gt;

&lt;h4 id=&quot;important-to-note&quot;&gt;Important to note&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;AI exists because of Natural Intelligence (Today Chams can auto adapt- case study)&lt;/li&gt;
  &lt;li&gt;Neural Networks existed within Trees&lt;/li&gt;
  &lt;li&gt;Blockchain Networks are trying to do what DNA’s have been doing long time ago&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So what modern invention are we looking in tech today that we cannot link to nature.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="journal" />
      
        <category term="code" />
      

      
        <summary type="html">Birds could fly before the Wright brothers created the plane, Neural networks existed within the deep roots of trees that allow them to share nutrients and communicate</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">String Reversal in Javascript</title>
      <link href="/posts/algorithms-js-string-reversal" rel="alternate" type="text/html" title="String Reversal in Javascript" />
      <published>2019-01-31T00:00:00+00:00</published>
      <updated>2019-01-31T00:00:00+00:00</updated>
      <id>/posts/algorithms-js-string-reversal</id>
      <content type="html" xml:base="/posts/algorithms-js-string-reversal">&lt;p&gt;In this javascript algorithm, I would be sharing with us different methods to reverse a string in javascript.
This is a common exercise in coding interviews, entry level algorithm challenges, though implementation in various languages may be different we would be looking at how to reverse a string in javascript, hope this helps you.&lt;/p&gt;

&lt;h2 id=&quot;task&quot;&gt;Task&lt;/h2&gt;

&lt;p&gt;Given a string, return a new string with the reversed order of characters&lt;/p&gt;

&lt;h6 id=&quot;examples&quot;&gt;Examples&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;reverse(‘apple’) === ‘leppa’&lt;/li&gt;
  &lt;li&gt;reverse(‘hello’) === ‘olleh’&lt;/li&gt;
  &lt;li&gt;reverse(‘Greetings!’) === ‘!sgniteerG’&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;using-javascripts-inbuilt-array-prototypes&quot;&gt;Using Javascripts Inbuilt Array Prototypes&lt;/h3&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the example above, we use the array methods, &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;reverse&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;join&lt;/code&gt; if we executed the function, our output would be something like&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//here we reverse the string hello&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output here is an array ['h','e','l','l','o']&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// the output here is ['0','l','l','e','h']&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The array join method would join the array into a string &quot;olleh&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;using-reduce-callback&quot;&gt;Using Reduce Callback&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The reduce function takes an accumulator and a value, this function will loop through every element in an array an generate an output based on the expression we pass into it, here we reversely concatenate the elements of the array, a much clearer way to look at it is&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stringToArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// This expression creates a new array from our string&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stringToArray&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;using-the-for-of-syntax&quot;&gt;Using the &lt;em&gt;For Of&lt;/em&gt; Syntax&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// we initially define reversed as an empty string in within the function&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reversed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// The for of loop iterates over elements&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// var reversed = []&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// store the value into reversed recursively&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;reversed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reversed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// return the value of reveresed in our function&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reversed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The for Of loop can iterate through Arrays, Strings and Javascript constructs that return &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;propertyIsEnumerable&lt;/code&gt; arguement.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/coding-interview-bootcamp-algorithms-and-data-structure/&quot;&gt;Learn More about Algorithms from : The Coding Interview Bootcamp: Algorithms + Data Structures &lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="code" />
      

      
        <summary type="html">In this javascript algorithm, I would be sharing with us different methods to reverse a string in javascript. This is a common exercise in coding interviews, entry level algorithm challenges, though implementation in various languages may be different we would be looking at how to reverse a string in javascript, hope this helps you.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">What can a course in programming to do you ?</title>
      <link href="/posts/what-can-programming-do-for-me" rel="alternate" type="text/html" title="What can a course in programming to do you ?" />
      <published>2019-01-23T00:00:00+00:00</published>
      <updated>2019-01-23T00:00:00+00:00</updated>
      <id>/posts/what-can-programming-do-for-me</id>
      <content type="html" xml:base="/posts/what-can-programming-do-for-me">&lt;p&gt;So you may be wondering what benefits you get from learning how to code, apart from the obvious benefits, learning how to code can help you&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve your perception and thought process&lt;/li&gt;
  &lt;li&gt;Add value to your current role or position&lt;/li&gt;
  &lt;li&gt;Teach you discipline as (programming requires discipline)&lt;/li&gt;
  &lt;li&gt;Help you get a job (There are a lot of testimonies out there about totally beginners getting a job after completing a coding program)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is very easy to get started with online resources that make it easy and have a very welcoming community where you can learn from&lt;/p&gt;

&lt;blockquote&gt;Have you considered learning to code&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/&quot;&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codecademy.com/&quot;&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udacity.com/&quot;&gt;Udacity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.coursera.org/&quot;&gt;Cousera&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://favcode54.org/&quot;&gt;Favcode54&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.edx.org/&quot;&gt;EDX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/&quot;&gt;Udemy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are not convinced yet, these are life changing testimonies from people who after taking a course in programming improved and transformed their lives.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.glamour.com/story/i-am-a-woman-who-learned-to-code-and-it-changed-my-life&quot;&gt;I’m a Woman Who Learned to Code and, Honestly, It Changed My Life&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.freecodecamp.org/inspirational-success-stories-from-self-taught-web-developers-4f6f375cf17d&quot;&gt;Lessons from 7 self-taught coders who now work full time as software developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://favcodereviews.com/&quot;&gt;Student Testimonies from Favcode54&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.codecademy.com/stories&quot;&gt;Student Testimonies from Codecademy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@Jasraj/so-i-got-a-front-end-dev-job-after-almost-12-months-on-freecodecamp-9e8b4712e0e4&quot;&gt;I just got a Front End Dev job. And I have freeCodeCamp to thank for it…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org/stories&quot;&gt;FCC Testimonies&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="code" />
      
        <category term="journal" />
      

      
        <summary type="html">So you may be wondering what benefits you get from learning how to code, apart from the obvious benefits, learning how to code can help you</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Palindrome in Javascript</title>
      <link href="/posts/algorithms-js-palindrome" rel="alternate" type="text/html" title="Palindrome in Javascript" />
      <published>2019-01-06T00:00:00+00:00</published>
      <updated>2019-01-06T00:00:00+00:00</updated>
      <id>/posts/algorithms-js-palindrome</id>
      <content type="html" xml:base="/posts/algorithms-js-palindrome">&lt;p&gt;In this javascript algorithm exercise, I would be sharing how to write a palindrome algorithm in javascript.&lt;/p&gt;

&lt;h4 id=&quot;what-is-a-palindrome-&quot;&gt;What is a Palindrome ?&lt;/h4&gt;
&lt;p&gt;Palindromes are strings that form the same word if it is reversed. Palindromes were first discovered in ancient Greek Scrolls&lt;/p&gt;

&lt;h3 id=&quot;how-to-solve-ispalindrome-in-javascript&quot;&gt;How to solve isPalindrome in Javascript&lt;/h3&gt;

&lt;p&gt;Given a string, return true if the string is a palindrome or false if it is not. &lt;em&gt;Do&lt;/em&gt; include spaces and punctuation in determining if the string is a palindrome.&lt;/p&gt;

&lt;h4 id=&quot;examples&quot;&gt;Examples&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;palindrome(&quot;abba&quot;) === true&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;palindrome(&quot;abcdefg&quot;) === false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lets-solve-this&quot;&gt;Let’s solve this&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isPalindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This method uses Javascripts inbuilt string and array methods, to split a string into an array like we did in our reverse string algorithm earlier, reverse it and then join it back, this then returns TRUE or FALSE if the output is the same as input when returned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let’s take a look at our function closely&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nx&quot;&gt;isPalindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'adb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// our function below&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isPalindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stringToArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output here is an array ['a','d','b']&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stringToArrayReversed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stringToArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// the output here is a reversed array of  ['b','d','a']&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reversedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stringToArrayReversed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The array join method would join the array into a string &quot;bda&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reversedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Without the True or False Statement our expression will return an implicit True or False when using the === operator if &lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt; and our &lt;code class=&quot;highlighter-rouge&quot;&gt;reversedString&lt;/code&gt; are the same. In this case ‘adb’ and ‘bda’ are not the same and would return false.&lt;/p&gt;

&lt;!-- ### Using the Array.protoType.every Method

```js
function reverse(str) {
  return str
    .split(&quot;&quot;)
    .reverse(&quot;&quot;)
    .join(&quot;&quot;);
}
``` --&gt;

&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/coding-interview-bootcamp-algorithms-and-data-structure/&quot;&gt;The Coding Interview Bootcamp: Algorithms + Data Structures &lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="code" />
      

      
        <summary type="html">In this javascript algorithm exercise, I would be sharing how to write a palindrome algorithm in javascript.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Dive straight to code or wireframe</title>
      <link href="/posts/dive-to-code-or-wireframe" rel="alternate" type="text/html" title="Dive straight to code or wireframe" />
      <published>2018-11-02T00:00:00+00:00</published>
      <updated>2018-11-02T00:00:00+00:00</updated>
      <id>/posts/dive-to-code-or-wireframe</id>
      <content type="html" xml:base="/posts/dive-to-code-or-wireframe">&lt;p&gt;I was chatting with someone recently who’s building their first website for a paying client. He’s doing extremely well, grappling with setting up hosting, domain names, WIX, Wordpress, CMS templates, Twig &lt;em&gt;and&lt;/em&gt; HTML and CSS. That’s a lot to simply learn. Producing something that’s someone’s willing to pay for while you learn is doubly difficult.&lt;/p&gt;

&lt;p&gt;One thing he was particularly frustrated about was receiving various files that he was expected to build web pages from. They might be Photoshop generated images or (a lot more usefully) Sketch wireframes. It’s a kind of baptism by fire – or by jQuery – where you try and wrangle something that &lt;em&gt;looks&lt;/em&gt; like something else that’s constructed differently, and serves a different purpose.&lt;/p&gt;

&lt;p&gt;When I build sites for paying customers, I think I have been unfairly blessed and lucky, I think. I got work on the back of this website, and I suspect it’s pretty obvious you’re not going to get complex, poster-like layouts and effects from me.&lt;/p&gt;

&lt;p&gt;So this site sets expectations nicely. I’ve also found that it’s important for the developer to control the conversation about what’s being built. And the only way to do that is to &lt;em&gt;start building HTML as soon as possible in the process&lt;/em&gt; for comment and approval. Once the customer (or someone in your team) produces a Interface and asks you to &lt;em&gt;translate&lt;/em&gt; it to Code, you’re either going to have to have a “difficult conversation” or spend your time pushing pixels and reaching for more and more javascript or abstruse, difficult CSS in order to wrangle your screen into the right shape. Responsiveness, manageability and speed become afterthoughts.&lt;/p&gt;

&lt;p&gt;That’s not to say something like a Sketch-generated image doesn’t have its place as it can express things like tone, colour, mood and typography succinctly. Wireframes get you thinking about UI.&lt;/p&gt;

&lt;p&gt;However, with concern to quickly prototyping, platforms and tools have emerged that intend to make that process more efficient and faster, taking you from wireframe to high fidelity mockups even to HTML, React, or any Mobile template build you prefer. In you free time you can checkout any of these solutions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://uizard.io&quot;&gt;UIzard&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://draftbit.com&quot;&gt;Draftbit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://framerx.io&quot;&gt;FramerX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://builderx.io&quot;&gt;BuilderX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Andrew Miracle</name>
        
        
      </author>

      

      
        <category term="journal" />
      
        <category term="code" />
      

      
        <summary type="html">I was chatting with someone recently who’s building their first website for a paying client. He’s doing extremely well, grappling with setting up hosting, domain names, WIX, Wordpress, CMS templates, Twig and HTML and CSS. That’s a lot to simply learn. Producing something that’s someone’s willing to pay for while you learn is doubly difficult.</summary>
      

      
      
    </entry>
  
</feed>
